//LCD
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);  // Kalau gagal ganti 0x3F ke 0x27 for a 16 chars and 2 line display

//Ultrasonic
#define trigPin 12
#define echoPin 11
#define trigPin2 4
#define echoPin2 3
int i = 0;
int currentState = 0;
int previousState = 0;
int currentState2 = 0;
int previousState2 = 0;
long duration, distance;
long duration2, distance2;

void setup() {
  // Ultrasonic
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
 pinMode(trigPin2, OUTPUT);
 pinMode(echoPin2, INPUT);
 // Serial
 Serial.begin(9600);
 //LCD
 lcd.init();                      // initialize the lcd 
}

void loop() {
 
 // Ultrasonic1
 digitalWrite(trigPin, LOW); 
 delayMicroseconds(2); 
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10); 
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = (duration/2) / 29.1;

 //Ultrasonic2
 digitalWrite(trigPin2, LOW); 
 delayMicroseconds(2); 
 digitalWrite(trigPin2, HIGH);
 delayMicroseconds(10); 
 digitalWrite(trigPin2, LOW);
 duration2 = pulseIn(echoPin2, HIGH);
 distance2 = (duration2/2) / 29.1;
 Serial.print("distance");
 Serial.print("\t");
 Serial.print(distance);
 Serial.print("\t");
 Serial.print("distance2");
 Serial.print("\t");
 Serial.println(distance2);

 //LCD
 lcd.backlight();

 //Obyek Masuk
 if (distance <= 90){
 currentState = 1;
 }
 else {
 currentState = 0;
 }
 //delay(100);
 if(currentState != previousState){
 while(currentState == 1) {
 long duration2, distance2;
 digitalWrite(trigPin2, LOW); 
 delayMicroseconds(2); 
 digitalWrite(trigPin2, HIGH);
 delayMicroseconds(10); 
 digitalWrite(trigPin2, LOW);
 duration2 = pulseIn(echoPin2, HIGH);
 distance2 = (duration2/2) / 29.1;
 if (distance2 <= 90){
 currentState2 = 1;
 }
 else {
 currentState2 = 0;
 }
 //delay(100);
 if(currentState2 != previousState2){
 if(currentState2 == 1) {
 i = i+1;
 lcd_print(i);
 if(i>16){
  play_alert();
  Serial.print("MASUK\t");
  Serial.print("play_alert()");
  i = 16;
  Serial.print("\ti\t");
  Serial.println(i);
  Serial.print("currentState:\t");
  Serial.println(currentState);
  Serial.print("previousState:\t");
  Serial.println(previousState);
  Serial.print("currentState2:\t");
  Serial.println(currentState2);
  Serial.print("previousState2:\t");
  Serial.println(previousState2);
 }else{
  lcd_print(i);
  play_ok();
  Serial.print("MASUK\t");
  Serial.print("play_ok");
  Serial.print("\ti\t");
  Serial.println(i);
  Serial.print("currentState:\t");
  Serial.println(currentState);
  Serial.print("previousState:\t");
  Serial.println(previousState);
  Serial.print("currentState2:\t");
  Serial.println(currentState2);
  Serial.print("previousState2:\t");
  Serial.println(previousState2);
 }
 delay(1000); // pause for 1 second
 }
 else {
 
 }
 return;
   }
  }
 }

//Obyek Keluar
if (distance2 <= 90){
 currentState2 = 1;
 }
 else {
 currentState2 = 0;
 }
 //delay(100);
 if(currentState2 != previousState2){
 while (currentState2 == 1) {
 digitalWrite(trigPin, LOW); 
 delayMicroseconds(2); 
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(10); 
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = (duration/2) / 29.1;
 if (distance <= 90){
 currentState = 1;
 }
 else {
 currentState = 0;
 }
 //delay(100);
 if(currentState != previousState){
 if(currentState == 1) {
 i = i-1;
 if(i<0){
  i=0;
  Serial.print("i\t");
  Serial.print(i);
 }
 lcd_print(i);
 if(i>16){
  play_alert();
  Serial.print("KELUAR\t");
  Serial.print("play_alert()");
  i=3;
  Serial.print("\ti\t");
  Serial.println(i);
  Serial.print("currentState:\t");
  Serial.println(currentState);
  Serial.print("previousState:\t");
  Serial.println(previousState);
  Serial.print("currentState2:\t");
  Serial.println(currentState2);
  Serial.print("previousState2:\t");
  Serial.println(previousState2);
 }else{
  lcd_print(i);
  play_ok();
  Serial.print("KELUAR\t");
  Serial.print("play_ok");
  Serial.print("\ti\t");
  Serial.println(i);
  Serial.print("currentState:\t");
  Serial.println(currentState);
  Serial.print("previousState:\t");
  Serial.println(previousState);
  Serial.print("currentState2:\t");
  Serial.println(currentState2);
  Serial.print("previousState2:\t");
  Serial.println(previousState2);
 }
 delay(1000); // pause for 1/2 second
 }
 else {
  
 }
 return;
   }
  }
 }
}

void lcd_print(int count){
 if (count > 16){
    Serial.print("Jumlah Pengunjung:");
    Serial.print("\t"); 
    Serial.println(i);
    lcd.backlight();
    lcd.setCursor(0,0);
    lcd.print("Visitor:");
    lcd.setCursor(9,0);
    lcd.print(count);
    lcd.setCursor(0,1);
    lcd.print("Jangan Masuk!");
    delay(1000);
    lcd.setCursor(9,0);
    lcd.print(count-1);
  }else{
    Serial.print("Jumlah Pengunjung:");
    Serial.print("\t"); 
    Serial.println(i);
    lcd.backlight();
    lcd.setCursor(0,0);
    lcd.print("Visitor:");
    lcd.setCursor(9,0);
    lcd.print(count);
    lcd.setCursor(0,1);
    lcd.print("Silakan Masuk!");
    delay(1000);
  }
}

void play_ok(){
  tone(8, 600, 1000);  // pin,frequency,duration
  delay(200);
  tone(8, 750, 500);
  delay(100);
  tone(8, 1000, 500);
  delay(200);
  noTone(8);
}

void play_alert() { // beep 3x when visitor is > 3
  tone(8, 2000, 1000);
  delay(1000);
  tone(8, 3000, 1000);
  delay(1000);
  tone(8, 4000, 1000);
  delay(1000);
  noTone(8);
}
